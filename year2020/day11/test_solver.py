import pytest
from assertpy import assert_that

import year2020.day11.reader as reader
import year2020.day11.solver as solver


def test_example_a():
    puzzle = {
        (0, 0): 'L', (1, 0): '.', (2, 0): 'L', (3, 0): 'L', (4, 0): '.', (5, 0): 'L', (6, 0): 'L', (7, 0): '.',
        (8, 0): 'L', (9, 0): 'L',
        (0, 1): 'L', (1, 1): 'L', (2, 1): 'L', (3, 1): 'L', (4, 1): 'L', (5, 1): 'L', (6, 1): 'L', (7, 1): '.',
        (8, 1): 'L', (9, 1): 'L',
        (0, 2): 'L', (1, 2): '.', (2, 2): 'L', (3, 2): '.', (4, 2): 'L', (5, 2): '.', (6, 2): '.', (7, 2): 'L',
        (8, 2): '.', (9, 2): '.',
        (0, 3): 'L', (1, 3): 'L', (2, 3): 'L', (3, 3): 'L', (4, 3): '.', (5, 3): 'L', (6, 3): 'L', (7, 3): '.',
        (8, 3): 'L', (9, 3): 'L',
        (0, 4): 'L', (1, 4): '.', (2, 4): 'L', (3, 4): 'L', (4, 4): '.', (5, 4): 'L', (6, 4): 'L', (7, 4): '.',
        (8, 4): 'L', (9, 4): 'L',
        (0, 5): 'L', (1, 5): '.', (2, 5): 'L', (3, 5): 'L', (4, 5): 'L', (5, 5): 'L', (6, 5): 'L', (7, 5): '.',
        (8, 5): 'L', (9, 5): 'L',
        (0, 6): '.', (1, 6): '.', (2, 6): 'L', (3, 6): '.', (4, 6): 'L', (5, 6): '.', (6, 6): '.', (7, 6): '.',
        (8, 6): '.', (9, 6): '.',
        (0, 7): 'L', (1, 7): 'L', (2, 7): 'L', (3, 7): 'L', (4, 7): 'L', (5, 7): 'L', (6, 7): 'L', (7, 7): 'L',
        (8, 7): 'L', (9, 7): 'L',
        (0, 8): 'L', (1, 8): '.', (2, 8): 'L', (3, 8): 'L', (4, 8): 'L', (5, 8): 'L', (6, 8): 'L', (7, 8): 'L',
        (8, 8): '.', (9, 8): 'L',
        (0, 9): 'L', (1, 9): '.', (2, 9): 'L', (3, 9): 'L', (4, 9): 'L', (5, 9): 'L', (6, 9): 'L', (7, 9): '.',
        (8, 9): 'L', (9, 9): 'L',
    }
    result = solver.solve_a(puzzle)
    assert_that(result).is_equal_to(37)


@pytest.mark.solution
def test_solution_a():
    result = solver.solve_a(reader.read())
    assert_that(result).is_equal_to(2164)


def test_example_b():
    puzzle = {
        (0, 0): 'L', (1, 0): '.', (2, 0): 'L', (3, 0): 'L', (4, 0): '.', (5, 0): 'L', (6, 0): 'L', (7, 0): '.',
        (8, 0): 'L', (9, 0): 'L',
        (0, 1): 'L', (1, 1): 'L', (2, 1): 'L', (3, 1): 'L', (4, 1): 'L', (5, 1): 'L', (6, 1): 'L', (7, 1): '.',
        (8, 1): 'L', (9, 1): 'L',
        (0, 2): 'L', (1, 2): '.', (2, 2): 'L', (3, 2): '.', (4, 2): 'L', (5, 2): '.', (6, 2): '.', (7, 2): 'L',
        (8, 2): '.', (9, 2): '.',
        (0, 3): 'L', (1, 3): 'L', (2, 3): 'L', (3, 3): 'L', (4, 3): '.', (5, 3): 'L', (6, 3): 'L', (7, 3): '.',
        (8, 3): 'L', (9, 3): 'L',
        (0, 4): 'L', (1, 4): '.', (2, 4): 'L', (3, 4): 'L', (4, 4): '.', (5, 4): 'L', (6, 4): 'L', (7, 4): '.',
        (8, 4): 'L', (9, 4): 'L',
        (0, 5): 'L', (1, 5): '.', (2, 5): 'L', (3, 5): 'L', (4, 5): 'L', (5, 5): 'L', (6, 5): 'L', (7, 5): '.',
        (8, 5): 'L', (9, 5): 'L',
        (0, 6): '.', (1, 6): '.', (2, 6): 'L', (3, 6): '.', (4, 6): 'L', (5, 6): '.', (6, 6): '.', (7, 6): '.',
        (8, 6): '.', (9, 6): '.',
        (0, 7): 'L', (1, 7): 'L', (2, 7): 'L', (3, 7): 'L', (4, 7): 'L', (5, 7): 'L', (6, 7): 'L', (7, 7): 'L',
        (8, 7): 'L', (9, 7): 'L',
        (0, 8): 'L', (1, 8): '.', (2, 8): 'L', (3, 8): 'L', (4, 8): 'L', (5, 8): 'L', (6, 8): 'L', (7, 8): 'L',
        (8, 8): '.', (9, 8): 'L',
        (0, 9): 'L', (1, 9): '.', (2, 9): 'L', (3, 9): 'L', (4, 9): 'L', (5, 9): 'L', (6, 9): 'L', (7, 9): '.',
        (8, 9): 'L', (9, 9): 'L',
    }
    result = solver.solve_b(puzzle)
    assert_that(result).is_equal_to(26)


@pytest.mark.solution
@pytest.mark.slow
def test_solution_b():
    result = solver.solve_b(reader.read())
    assert_that(result).is_equal_to(1974)
